# This is a basic workflow to help you get started with Actions

name: CI
env:
  location: eastus2
  username: jordan.smith@powerhell.org

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ testing ]
  pull_request:
    branches: [ testing ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  release:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
        with:
          ref: testing

      - name: Azure Login
        uses: Azure/login@v1
        with:
          # Paste output of `az ad sp create-for-rbac` as value of secret variable: AZURE_CREDENTIALS
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          # Set this value to true to enable Azure PowerShell Login in addition to Az CLI login
          # enable-AzPSSession: # optional
      # Runs a single command using the runners shell
      - name: Azure CLI Action
        uses: Azure/cli@v1.0.0
        with:
          inlineScript: export USEROBJID=$(az ad user show --id ${{ env.Username }} --query objectId | tr -d '"')

      - name: Azure CLI Action
        uses: Azure/cli@v1.0.0
        with:
          # Specify the script here
          inlineScript: az deployment sub create -n ${{ GITHUB_ACTION }} --location ${{ env.location }} --template-file ./azuredeploy.json --parameters ./azuredeploy.parameters.json --parameters vpnSecret=${{ secrets.VPN_SECRET }} --parameters azureRegion=${{ env.location }} --parameters $USEROBJID
          # Azure CLI version to be used to execute the script. If not provided, latest version is used
          # azcliversion: # optional, default is latest

      - name: Azure CLI Action
        uses: Azure/cli@v1.0.0
        with:
          inlineScript: export FANAME=$(az functionapp list --query "[?resourceGroup=='shadowsocks'].{Name:name}" -o tsv)
    
      - uses: actions/checkout@v2
        with:
          ref: functionapp
          path: './functionapp'
        
      - uses: thedoctor0/zip-release@master
        with:
          directory: './functionapp'
          filename: 'release.zip'
          
      
      - name: Azure CLI Action
      - uses: Azure/cli@v1.0.0
        with:
          inlineScript: az functionapp deployment source config-zip --src release.zip -n $FANAME -g shadowsocks

